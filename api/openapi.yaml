openapi: 3.1.0
info:
  title: Chat Application API
  description: API for real-time chat application
  version: 1.0.0
servers:
  - url: http://localhost:8080
    description: Local development server
paths:
  /api/signup:
    post:
      summary: Create a new user account
      operationId: signup
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/login:
    post:
      summary: Login to existing account
      operationId: login
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredentials'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/lobbies:
    get:
      summary: Get all lobbies
      operationId: getLobbies
      tags:
        - lobbies
      responses:
        '200':
          description: List of lobbies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lobby'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new lobby
      operationId: createLobby
      tags:
        - lobbies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LobbyRequest'
      responses:
        '201':
          description: Lobby created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lobby'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    UserCredentials:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          example: "johndoe"
        password:
          type: string
          format: password
          example: "password123"
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        username:
          type: string
          example: "johndoe"
        message:
          type: string
          example: "Login successful"
    LobbyRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: "General Chat"
    Lobby:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "General Chat"
    Message:
      type: object
      properties:
        id:
          type: integer
          example: 1
        content:
          type: string
          example: "Hello, world!"
        user_id:
          type: integer
          example: 1
        username:
          type: string
          example: "johndoe"
        lobby_id:
          type: integer
          example: 1
        timestamp:
          type: string
          format: date-time
          example: "2023-01-01T12:00:00Z"
    Error:
      type: object
      properties:
        message:
          type: string
          example: "Error message" 